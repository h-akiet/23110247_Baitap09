type Query {
  productsSortedByPrice: [Product!]!
  productsByCategory(categoryId: ID!): [Product!]!
  users: [User!]!
  user(id: ID!): User
  categories: [Category!]!
  category(id: ID!): Category
  product(id: ID!): Product
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): Boolean!

  createCategory(input: CreateCategoryInput!): Category!
  updateCategory(id: ID!, input: UpdateCategoryInput!): Category!
  deleteCategory(id: ID!): Boolean!

  createProduct(input: CreateProductInput!): Product!
  updateProduct(id: ID!, input: UpdateProductInput!): Product!
  deleteProduct(id: ID!): Boolean!
}

input CreateUserInput { fullname: String!, email: String!, password: String!, phone: String }
input UpdateUserInput { fullname: String, email: String, password: String, phone: String }

input CreateCategoryInput { name: String!, images: String }
input UpdateCategoryInput { name: String, images: String }

input CreateProductInput {
  title: String!
  quantity: Int!
  desc: String
  price: Float!
  userid: ID!
  categoryId: ID!
}
input UpdateProductInput {
  title: String
  quantity: Int
  desc: String
  price: Float
  userid: ID
  categoryId: ID
}

type User { id: ID!, fullname: String!, email: String!, phone: String, favoriteCategories: [Category] }
type Category { id: ID!, name: String!, images: String, products: [Product] }
type Product { id: ID!, title: String!, quantity: Int!, desc: String, price: Float!, user: User, category: Category }
